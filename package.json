{
  "name": "@voxpelli/renovate-config",
  "description": "Personal preset package for Renovate",
  "version": "2.6.0",
  "license": "MIT",
  "author": "Pelle Wessman <pelle@kodfabrik.se> (http://kodfabrik.se/)",
  "homepage": "https://github.com/voxpelli/renovate-config-voxpelli",
  "repository": {
    "type": "git",
    "url": "git://github.com/voxpelli/renovate-config-voxpelli.git"
  },
  "bugs": {
    "url": "https://github.com/voxpelli/renovate-config-voxpelli/issues"
  },
  "scripts": {
    "test": ""
  },
  "renovate-config": {
    "replaceDevDependencies": {
      "packageRules": [
        {
          "depTypeList": [
            "devDependencies"
          ],
          "rangeStrategy": "replace"
        }
      ]
    },
    "bumpPeerDependencies": {
      "packageRules": [
        {
          "depTypeList": [
            "peerDependencies"
          ],
          "rangeStrategy": "bump"
        }
      ]
    },
    "bumpDevDependencies": {
      "packageRules": [
        {
          "depTypeList": [
            "devDependencies"
          ],
          "rangeStrategy": "bump"
        }
      ]
    },
    "groupLinters": {
      "description": "Group all major and non-major linter package updates together respectively",
      "packageRules": [
        {
          "extends": "packages:linters",
          "packagePatterns": [
            "eslint"
          ],
          "packageNames": [
            "dependency-check",
            "detective-cjs",
            "installed-check"
          ],
          "major": {
            "groupName": "linter-majors"
          },
          "minor": {
            "groupName": "linters"
          }
        }
      ]
    },
    "groupTypes": {
      "description": "Group all major and non-major type related package updates together",
      "packageRules": [
        {
          "packagePatterns": [
            "^@types/"
          ],
          "packageNames": [
            "@voxpelli/tsconfig",
            "tsd",
            "type-coverage",
            "type-fest",
            "typescript"
          ],
          "major": {
            "groupName": "types-majors"
          },
          "minor": {
            "groupName": "types"
          }
        }
      ]
    },
    "groupStyles": {
      "description": "Group all major and non-major CSS related package updates together",
      "packageRules": [
        {
          "packagePatterns": [
            "postcss",
            "stylelint"
          ],
          "packageNames": [
            "autoprefixer",
            "browserslist",
            "sass"
          ],
          "major": {
            "groupName": "styles-majors"
          },
          "minor": {
            "groupName": "styles"
          }
        }
      ]
    },
    "groupTests": {
      "description": "Group all non-major test package updates together",
      "packageRules": [
        {
          "extends": "packages:test",
          "packagePatterns": [
            "chai",
            "mocha",
            "sinon"
          ],
          "packageNames": [
            "c8",
            "concurrently",
            "cross-env",
            "husky",
            "nodemon",
            "npm-run-all"
          ],
          "major": {
            "groupName": "tests-major"
          },
          "minor": {
            "groupName": "tests"
          }
        }
      ]
    },
    "vpSchedule": {
      "schedule": [
        "before 3am on Wednesday"
      ]
    },
    "unitGroup": {
      "extends": [
        "group:test"
      ]
    },
    "libDefault": {
      "extends": [
        "@voxpelli"
      ]
    },
    "vpBase": {
      "extends": [
        "config:js-lib",
        ":masterIssue",
        ":prConcurrentLimit20",
        "@voxpelli:vpSchedule",
        "@voxpelli:bumpDevDependencies"
      ],
      "timezone": "Europe/Stockholm"
    },
    "appDefault": {
      "extends": [
        "@voxpelli"
      ],
      "lockFileMaintenance": {
        "enabled": true
      }
    },
    "default": {
      "extends": [
        "@voxpelli:vpBase",
        "@voxpelli:groupStyles",
        "@voxpelli:groupTypes",
        "@voxpelli:groupTests",
        "@voxpelli:groupLinters"
      ]
    }
  }
}
